# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible-community/schemas/main/f/ansible-tasks.json
- block:
    - name: Install repo symlink
      file:
        src: "{{ '.' | realpath }}"
        dest: "{{ xdg_config_home }}/dotfiles"
        state: link
        force: true
        follow: false

    - name: Ensure XDG directories exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ xdg_config_home }}"
        - "{{ xdg_data_home }}"
        - "{{ xdg_cache_home }}"
        - "{{ xdg_bin }}"

    - name: Get .config dotfiles
      find:
        paths: "../config"
        depth: no
        file_type: any
        follow: no
        hidden: yes
      register: dotfiles_config

    - name: Get .local/share dotfiles
      find:
        paths: "../data"
        depth: no
        file_type: any
        follow: no
        hidden: yes
      register: dotfiles_data

    - name: Get .local/bin files
      find:
        paths: "../bin"
        depth: no
        file_type: any
        follow: no
        hidden: yes
      register: dotfiles_bin

    - name: Get snowflake dotfiles
      find:
        paths: "../snowflakes"
        depth: no
        file_type: any
        follow: no
        hidden: yes
      register: dotfiles_snowflakes

    - name: Install .config dotfiles
      file:
        src: "dotfiles/config/{{ item }}"
        dest: "{{ xdg_config_home }}/{{ item }}"
        state: link
      loop: "{{ dotfiles_config.files | map(attribute='path') | map('basename') }}"

    - name: Install .local/share dotfiles
      file:
        src: "{{ xdg_config_home }}/dotfiles/data/{{ item }}"
        dest: "{{ xdg_data_home }}/{{ item }}"
        state: link
      loop: "{{ dotfiles_data.files | map(attribute='path') | map('basename') }}"

    - name: Install .local/bin dotfiles
      file:
        src: "{{ xdg_config_home }}/dotfiles/bin/{{ item }}"
        dest: "{{ xdg_bin }}/{{ item }}"
        state: link
      loop: "{{ dotfiles_bin.files | map(attribute='path') | map('basename') }}"

    - name: Install snowflakes
      file:
        src: "{{ xdg_config_home }}/dotfiles/snowflakes/{{ item }}"
        dest: "{{ user_home }}/.{{ item }}"
        state: link
        force: true
      loop: "{{ dotfiles_snowflakes.files | map(attribute='path') | map('basename') }}"

    - name: Ensure wallpapers directory exist
      become: true
      file:
        path: "/usr/share/wallpapers/Mange"
        state: directory
        owner: root
        group: root
        mode: u=rwX,g=rX,o=rX

    - name: Copy wallpapers to system directory
      become: true
      ansible.posix.synchronize:
        src: "../data/wallpapers/"
        dest: "/usr/share/wallpapers/Mange"
        archive: true
        delete: true

    - name: Set permissions of system wallpapers
      become: true
      file:
        path: "/usr/share/wallpapers/Mange"
        state: directory
        recurse: true
        owner: root
        group: root
        mode: u=rwX,g=rX,o=rX

    - name: Check if user directories are installed
      stat:
        path: "{{ xdg_config_home }}/user-dirs.dirs"
      register: user_dirs

    - name: Set up default user directories
      when: not user_dirs.stat.exists
      copy:
        src: user-dirs.dirs
        dest: "{{ xdg_config_home }}/user-dirs.dirs"

    - name: Create missing user directories
      shell: |
        . "${XDG_CONFIG_HOME:-$HOME/.config}/user-dirs.dirs"

        for var in \
          XDG_DESKTOP_DIR XDG_DOCUMENTS_DIR XDG_DOWNLOAD_DIR \
          XDG_MUSIC_DIR XDG_PICTURES_DIR XDG_PUBLICSHARE_DIR \
          XDG_TEMPLATES_DIR XDG_VIDEOS_DIR; do
          [ -d "${!var}" ] || mkdir -vp "${!var}"
        done
