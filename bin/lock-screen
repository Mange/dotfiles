#!/bin/bash
# Lock screen, executing some things before and some things after unlocking
# again. Using i3lock-color.

# The sleep_lock and normal_lock code is based on
# /usr/share/doc/xss-lock/transfer-sleep-lock-i3lock.sh

sleep_lock() {
  # Make sure i3lock does not inherit a copy of XSS_SLEEP_LOCK_FD
  i3lock "${i3lock_options[@]}" {XSS_SLEEP_LOCK_FD}<&-
}

sleep_wait() {
  kill_i3lock() {
    pkill --exact --user $EUID "$@" i3lock
  }
  trap kill_i3lock TERM INT

  # Lock is now ready, feel free to sleep. Closing FD.
  exec {XSS_SLEEP_LOCK_FD}<&-

  # Wait for lock to be unlocked
  while kill_i3lock -0; do
    sleep 0.5
  done
}

normal_lock() {
  trap 'kill %%' TERM INT
  i3lock --nofork "${i3lock_options[@]}" &
}

normal_wait() {
  wait
}

i3lock_options=(
  "--pass-media-keys"
  "--pass-screen-keys"
  "--pass-power-keys"
  "--pass-volume-keys"

  "--indicator"
  "--clock"
  "--date-str=Type password to unlockâ€¦"
  "--show-failed-attempts"
  "--verif-text="
  "--wrong-text="

  "--date-align=1"
  "--time-align=1"
  "--time-pos=x+43:h-70"
  "--date-pos=x+43:h-45"
  "--ind-pos=x+280:h-70"
  "--radius=20"
  "--ring-width=3"

  "--color=00000066"
  "--inside-color=00000000"
  "--ring-color=ffffffff"
  "--line-uses-inside"
  "--keyhl-color=d23c3dff" # #d23c3d
  "--bshl-color=d23c3dff"  # #d23c3d
  "--separator-color=00000000"
  "--insidever-color=fecf4dff" # #fecf4d
  "--insidewrong-color=d23c3dff" # #d23c3d
  "--ringver-color=ffffffff"
  "--ringwrong-color=ffffffff"
  #"--text-color=ffffffff"
  "--time-color=ffffffff"
  "--date-color=ffffffff"
)

if [[ $1 == "--debug" ]]; then
  printf "i3lock "
  printf '"%s" ' "${i3lock_options[@]}"
  printf "\n"
  exit 0
fi

is_sleep=no

# If XSS_SLEEP_LOCK_FD is passed, then the machine is going to sleep and this
# script should signal that the lock is done by closing that FD.
# If not, it's a standard lock which is a lot simpler.
if [ -e "/dev/fd/${XSS_SLEEP_LOCK_FD:--1}" ]; then
  is_sleep=yes
fi

#
# Lock
#

locked_at_timestamp=$(date +%s)

# playerctl is sometimes very slow (>20 seconds) when using spotifyd. Place it
# behind timeouts to make the lock screen actions faster.

if [[ $is_sleep == "yes" ]]; then
  sleep_lock
  timeout 2 playerctl pause
  sleep_wait
else
  normal_lock

  previous_player_status=$(timeout 1 playerctl status)
  [ "$previous_player_status" = "Playing" ] && timeout 1 playerctl pause

  normal_wait
fi

#
# After unlock
#

# Make sure keyboard is set up correctly. Replugging a keyboard resets Xmodmap,
# and this is common as I unplug my keyboard from my laptop before it goes to
# sleep.
fix-keyboard

# Resume media if lock screen paused it, and we didn't sleep
if [[ $is_sleep == "no" ]]; then
  [ "$previous_player_status" = "Playing" ] && playerctl play
fi

# Show reminder, if it was more than 20 minutes since last locked
twenty_minutes_ago=$(date -d "20 minutes ago" +%s)
if [ "$locked_at_timestamp" -lt "$twenty_minutes_ago" ]; then
    startup-reminder
fi
