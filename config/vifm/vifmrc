" vim: filetype=vifm foldmethod=marker :

" {{{ Basic settings
set grepprg='rg --line-number %i %a %s'
set history=100
set hlsearch
set ignorecase
set incsearch
set nofollowlinks
set norunexec
set novimhelp
set scrolloff=4
set smartcase
set sortnumbers
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers
set syscalls
set timefmt=%Y-%m-%d\ %H:%M
set trash
set undolevels=100
set vicmd=nvim
set wildmenu
set wildstyle=popup

colorscheme mange

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look
set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

set vifminfo=dhistory,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" }}}
" {{{ Marks

" :mark mark /full/directory/path [filename]

mark h ~
mark d ~/Downloads
mark m ~/Media
mark p ~/Media/Pictures
mark P ~/Projects
mark D ~/Projects/dotfiles

" }}}
" {{{ Custom commands

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff nvim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f

command! make !!make %a
command! rake !!rake %a
command! rspec !!rspec %a

command! mkcd :mkdir %a | cd %a
command! vgrep nvim "+Ag %a"
command! reload :write | restart

command! fzf :set noquickview | :execute 'goto "'.system('find | fzf --height 10 2>/dev/tty ').'"%IU' | redraw

" }}}
" {{{ File previews / open commands

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf / comics / etc
filextype *.pdf,*.cbr,*.cbz zathura %c %i &
fileviewer *.pdf
        \ preview-image.sh pdfpreview %px %py %pw %ph %c
        \ %pc
        \ preview-image.sh clear
fileviewer *.epub
        \ preview-image.sh epubpreview %px %py %pw %ph %c
        \ %pc
        \ preview-image.sh clear

" PostScript
filextype *.ps,*.eps,*.ps.gz
        \ {View in zathura}
        \ zathura %f,

" Djvu
filextype *.djvu
        \ {View in zathura}
        \ zathura %f,

" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
       \ {Play using mpv}
       \ mpv %f,
fileviewer *.mp3 mp3info
fileviewer *.flac soxi

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
        \ {View using mpv}
        \ mpv %f,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]
        \ preview-image.sh videopreview %px %py %pw %ph %c
        \ %pc
        \ preview-image.sh clear

" Web
fileviewer *.html,*.htm w3m -dump %c
filextype *.html,*.htm
        \ {Open with Firefox}
        \ firefox-developer-edition %f &,
filetype *.html,*.htm links, lynx

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ {View in sxiv}
        \ sxiv %f,
        \ {View in shotwell}
        \ shotwell,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.xpm
        \ preview-image.sh draw %px %py %pw %ph %c
        \ %pc
        \ preview-image.sh clear
fileviewer *.gif
        \ preview-image.sh gifpreview %px %py %pw %ph %c
        \ %pc
        \ preview-image.sh clear

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype *.torrent ktorrent %f &
fileviewer *.torrent dumptorrent -v %c

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt atool -l %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz atool -l %c
fileviewer *.tar.bz2,*.tbz2 atool -l %c
fileviewer *.tar.txz,*.txz atool -l %c
fileviewer *.tar atool -l %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar atool -l %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx docx2txt.pl %f -
fileviewer *.csv sed "s/,,,,/,,-,,/g;s/,,/ /g" %c | column -t | sed "s/ - / /g" | cut -c -%pw

" Directories
fileviewer ../ tree %c -L 1 --dirsfirst
fileviewer */ tree %c -L 1 --dirsfirst
filextype */
        \ {View in Dolphin}
        \ dolphin %f &,

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" Default previewer of files: bat
" Unset COLORTERM from "truecolor" so bat falls back to 256 colors as vifm
" will strip out color codes from the "truecolor" space.
fileviewer *[^/]
        \ env COLORTERM=256 bat
          \ --paging=never
          \ --decorations=always
          \ --color=always
          \ --terminal-width=%pw
          \ --italic-text=always
          \ --style=full
          \ %c

" }}}
" {{{ Mappings

" How to block a built-in mapping:
" nnoremap <left> <nop>

nnoremap q ZQ

" FZF on Ctrl-T (shell-like) and Ctrl-P (vim-like)
nnoremap <C-p> :fzf<cr>
nnoremap <C-t> :fzf<cr>

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Yank current directory path into the clipboard
nnoremap yd :!echo -n %d | xsel --input --clipboard %i<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo -n %c:p | xsel --input --clipboard %i<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Disable built-in space binding (doesn't seem to work)
nunmap <space>
unmap <space>

" Mark file and move to next entry in list
nnoremap <wait> <space><space> tj

" Open console in current directory
nnoremap <wait> <space>t :!kitty 2>/dev/null &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap <wait> <space>c :write | edit $MYVIFMRC | restart<cr>

" Toggle wrap setting on <space>w key
nnoremap <wait> <space>w :set wrap!<cr>

" Faster window/tab/history navigation
nnoremap <C-h> :wincmd h<cr>
nnoremap <C-j> :wincmd j<cr>
nnoremap <C-k> :wincmd k<cr>
nnoremap <C-l> :wincmd l<cr>
nnoremap H :tabprev<cr>
nnoremap L :tabnext<cr>
nnoremap J :histprev<cr>
nnoremap K :histnext<cr>

" }}}
" {{{ Misc examples
" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername
" }}}
" {{{ Devicons
" Source: https://github.com/vifm/vifm/issues/164
" file types
set classify=' :dir:/, :exe:, :reg:, :link:'
" various file names
set classify+=' ::..::, ::*.sh::, ::*.[hc]pp::, ::*.[hc]::, ::/^copying|license$/::, ::.git,,*.git::, ::*.epub,,*.fb2,,*.djvu::, ::*.pdf::, ::*.htm,,*.html,,**.[sx]html,,*.xml::'
" archives
set classify+=' ::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.deb,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.xz,,*.z,,*.zip,,*.zoo::'
" images
set classify+=' ::*.bmp,,*.gif,,*.jpeg,,*.jpg,,*.ico,,*.png,,*.ppm,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd::'
" office files
set classify+=' ::*.doc,,*.docx::, ::*.xls,,*.xls[mx]::, ::*.pptx,,*.ppt::'
" }}}
