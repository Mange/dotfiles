#!/usr/bin/env bash
set -e
hash toggl 2>/dev/null || exit 0

root="$(dirname "$0")"

# shellcheck source=../../data/gruvbox/colors.env
source "${root}/../../data/gruvbox/colors.env"

function print_status() {
  local max_title=$1
  local polybar_format="${2:-true}"

  program='
    BEGIN {
      title=""
      runtime=""
    }
    /No timer is running./ {
      if (polybar_format == "true") {
        print "%{F'"${faded_orange}"'}No Toggl%{F-}"
      } else {
        print "No Toggl"
      }
      exit
    }
    # First line of text is the title (empty lines are added around this)
    title == "" && $0 != "" { # Title [ Project ]
      title=$0
    }
    match($0, /Running for:\s+(.*)\s+since/, subs) {
      sub(/\s+$/, "", subs[1]) # Strip ending whitespace
      runtime=subs[1]
    }
    END {
      if (length(title) == 0) {
        # No nothing
      } else if (max_title > 0 && length(title) > max_title) {
        printf "%sâ€¦ (%s)\n", substr(title, 0, max_title - 1), runtime
      } else {
        printf "%s (%s)\n", title, runtime
      }
    }
  '

  toggl c --no-color 2>&1 | \
    awk "$program" "max_title=$max_title" "polybar_format=$polybar_format"
}

case "$1" in
  notify)
    notify-send --expire-time=5000 "Toggl" "$(print_status 0 false)"
    ;;
  start-stop)
    if toggl c 2>&1 | grep "No timer is running."; then
      toggl start 1
    else
      toggl stop
    fi
    notify-send --expire-time=1000 "Toggl" "$(print_status 0 false)"
    ;;
  watch)
    shift
    interval="${1:-5}"
    while true; do
      print_status 15 true
      sleep "$interval"
    done
    ;;
  status)
    print_status 15 true
    ;;
  *)
    echo "Unknown subcommand $1" >&2
    exit 1
    ;;
esac
