# vim: ft=sh
# Shell function in order to be able to affect outside environment variables.

autoload apply_prompt_theme

function theme() {
  local usage="
theme <light|dark|apply|load>

  light:
    Set and apply theme \"light\".
  dark:
    Set and apply theme \"dark\".
  apply:
    Apply whichever theme is currently set. Should happen once at login.
  load:
    Load current theme into the current shell process.
"
  local current_style
  local apply

  case "$1" in
    dark)
      current_style=dark
      apply=1
      ;;
    light)
      current_style=light
      apply=1
      ;;
    apply)
      apply=1
      ;;
    load)
      ;;
    --help)
      echo "$usage"
      return 0
      ;;
    *)
      echo "$usage" >&2
      return 1
  esac

  # Load the current style from disk
  if [[ -z $current_style ]]; then
    current_style="$(cat "${XDG_RUNTIME_DIR}/current_theme")"
  fi

  # Apply default if no style was selected or stored on disk
  if [[ -z "$current_style" ]]; then
    current_style=dark
  fi

  export MANGE_THEME="$current_style"
  export KITTY_THEME="$current_style"
  case "$current_style" in
    dark)
      export BAT_THEME="gruvbox"
      ;;
    light)
      export BAT_THEME="gruvbox-light"
      ;;
  esac

  apply_prompt_theme "$current_style"

  if [[ -n $apply ]]; then
    ~/.local/bin/_theme_set "$current_style"
    ~/.local/bin/set-wallpaper
    ~/.local/bin/_theme_reload_window
  fi
}

theme "$@"
