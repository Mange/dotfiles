# i3 config file (v4)
# vim:foldmethod=marker:
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# TODO:
#   * System mode https://github.com/mohabaks/dotfiles/blob/master/config/i3-gaps/.config/i3/config#L212

# {{{ Basic settings
# Mod3 is my Hyper (see $XDG_CONFIG_HOME/xmodmap/custom_keyboard)
set $mod Mod3

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

hide_edge_borders both
smart_borders no_gaps
gaps inner 11
gaps outer 0

new_window pixel 2
new_float pixel 2
# }}}

# {{{ Colors
# Based on Gruvbox; raw colors below:
set $dark0_hard "#1d2021"
set $dark0 "#282828"
set $dark0_soft "#32302f"
set $dark1 "#3c3836"
set $dark2 "#504945"
set $dark3 "#665c54"
set $dark4 "#7c6f64"
set $dark4_256 "#7c6f64"

set $gray_245 "#928374"
set $gray_244 "#928374"

set $light0_hard "#f9f5d7"
set $light0 "#fbf1c7"
set $light0_soft "#f2e5bc"
set $light1 "#ebdbb2"
set $light2 "#d5c4a1"
set $light3 "#bdae93"
set $light4 "#a89984"
set $light4_256 "#a89984"

set $bright_red "#fb4934"
set $bright_green "#b8bb26"
set $bright_yellow "#fabd2f"
set $bright_blue "#83a598"
set $bright_purple "#d3869b"
set $bright_aqua "#8ec07c"
set $bright_orange "#fe8019"

set $neutral_red "#cc241d"
set $neutral_green "#98971a"
set $neutral_yellow "#d79921"
set $neutral_blue "#458588"
set $neutral_purple "#b16286"
set $neutral_aqua "#689d6a"
set $neutral_orange "#d65d0e"

set $faded_red "#9d0006"
set $faded_green "#79740e"
set $faded_yellow "#b57614"
set $faded_blue "#076678"
set $faded_purple "#8f3f71"
set $faded_aqua "#427b58"
set $faded_orange "#af3a03"

# setting                outline         bg              text    indicator   child_border
client.focused           $light1         $light1         $dark0  $light3     $light1
client.focused_inactive  $light3         $light3         $dark0  $light3     $light3
client.unfocused         $gray_245       $gray_245       $light1 $light3     $gray_245
client.urgent            $bright_red     $bright_red     $light1 $bright_red $bright_red
# }}}

# {{{ Early startup applications
set $wallpaper_command ~/.local/bin/set-wallpaper
set $polybar_command ~/.config/polybar/start.sh

# Lock screen on suspend, after screensaver, etc.
exec --no-startup-id light-locker

# Keyboard, screens, etc.
exec --no-startup-id xmodmap ~/.config/xmodmap/custom_keyboard
exec --no-startup-id ~/.local/bin/dynamic-startup
exec --no-startup-id ~/.local/bin/autoscreens

# Compositor
exec --no-startup-id compton --config ~/.config/compton/compton.conf
exec --no-startup-id redshift-gtk

# Wallpaper, bars, etc.
exec_always --no-startup-id $wallpaper_command
exec_always --no-startup-id $polybar_command

# Daemons
exec --no-startup-id blueman-applet # Bluetooth
exec --no-startup-id copyq # Clipboard manager
exec --no-startup-id dropbox start # Dropbox
exec --no-startup-id dunst # Notification server
exec --no-startup-id nm-applet # NetworkManager
exec --no-startup-id udiskie --tray # Device mounter

# To deal with apps requesting privilege elevation
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# }}}

# {{{ i3 shortcuts
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec i3quit

# Lock screen
bindsym $mod+Shift+Escape exec light-locker-command -l

# Reflow screens
bindsym $mod+Shift+x exec --no-startup-id xrandr --auto && autoscreens && $wallpaper_command && $polybar_command

# In case of emergency
bindsym Ctrl+Shift+Escape exec --no-startup-id xmodmap ~/.config/xmodmap/custom_keyboard

# }}}

# {{{ Program shortcuts

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# File manager
bindsym $mod+period exec run-or-raise 'class = "floating-ranger"' termite --class floating-ranger -e ranger
bindsym $mod+shift+period exec termite -e ranger

# Rofi
bindsym $mod+d exec --no-startup-id "rofi -show combi -modi combi,run,window,emoji -combi-modi drun,window,emoji"
bindsym $mod+shift+d exec --no-startup-id "rofi -show run"
# TODO: bindsym $mod+p exec --no-startup-id "some-form-of-rofi-adapter-for-bitwarden"

# Xbacklight
bindsym XF86MonBrightnessUp exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10

# Screenshots
bindsym --release $mod+minus exec gnome-screenshot
bindsym --release $mod+Shift+minus exec gnome-screenshot --area

# Taskwarrior stuff
bindsym $mod+t exec run-or-raise 'class = "floating-vit"' termite --class floating-vit -e vit
bindsym $mod+n exec ~/.cargo/bin/new-task-gtk

# }}}

# {{{ Dropdown terminal

#  Run a floating, hidden terminal window at all times. This window can be
#  toggled using $mod+g.
#  (If you accidentally close it, you can open it again using $mod+shift+g.)

set $dropdown_terminal_cmd termite --role dropdown
set $dropdown_window_cond [class="Termite" window_role="dropdown"]

# Toggle floating and hide the window as soon as it is created. Make it cover
# 50% of screen in both directions too.
for_window $dropdown_window_cond \
    floating enable, \
    move scratchpad, \
    border pixel 5, \
    resize set 50 ppt 50 ppt

# $mod+g toggles the dropdown terminal and moves it to the center.
bindsym $mod+g $dropdown_window_cond scratchpad show; \
    $dropdown_window_cond move position center

# $mod+shift+g starts a new instance of the terminal, then runs the same command as $mod+g.
bindsym $mod+shift+g exec $dropdown_terminal_cmd; \
    $dropdown_window_cond scratchpad show; \
    $dropdown_window_cond move position center

# Start it up in the background
exec --no-startup-id $dropdown_terminal_cmd

# }}}

# {{{ Dropdown Bitwarden
#  Run a floating, hidden Bitwarden window at all times. This window can be
#  toggled using $mod+shift+p.
#  (If you accidentally close it, just start the app again.)

set $bitwarden_window_cond [class="Bitwarden"]

# Toggle floating and hide the window as soon as it is created.
for_window $bitwarden_window_cond \
    floating enable, \
    move scratchpad

# $mod+shift+p toggles the bitwarden window
bindsym $mod+shift+p $bitwarden_window_cond scratchpad show

# Start it up in the background
exec --no-startup-id bitwarden
# }}}

# {{{ Workspaces

set $workspace1   "1:System"
set $workspace2   "2:Code"
set $workspace3   "3:Browse"
set $workspace4   "4"
set $workspace5   "5"
set $workspace6   "6"
set $workspace7   "7"
set $workspace8   "8"
set $workspace9   "9:Media"
set $workspace10 "10:Chat"

# switch to workspace
bindsym $mod+grave workspace back_and_forth
bindsym $mod+Escape workspace back_and_forth
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# switch to output
bindsym $mod+Ctrl+h focus output left
bindsym $mod+Ctrl+j focus output down
bindsym $mod+Ctrl+k focus output up
bindsym $mod+Ctrl+l focus output right

# Switching to active workspace does nothing
workspace_auto_back_and_forth no

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# Move workspaces
bindsym $mod+Shift+Ctrl+h move workspace to output left
bindsym $mod+Shift+Ctrl+j move workspace to output down
bindsym $mod+Shift+Ctrl+k move workspace to output up
bindsym $mod+Shift+Ctrl+l move workspace to output right

# }}}

# {{{ Assignments

# Chromium apps have instance names beginning with "crx_", so by looking for
# that AND the title, we can determine which app it is. Some of the apps does
# not assign instance/title before application finishes loading, and in that
# case cannot be placed automatically using assign.
# Using for_window instead might be better, but it also means that they are
# frozen to that workspace, which is unacceptable in some cases.

# DevDocs API Documentation app (Chromium)
for_window [instance="^crx_" title="^DevDocs"] move to workspace $workspace3

assign [class="Evolution"] $workspace5

# Spotify does not set class before displaying window, so force window movement
# always instead.
# https://github.com/i3/i3/issues/2060
for_window [class="Spotify"] move to workspace $workspace9

assign [class="Slack"] $workspace10
assign [class="yakyak"] $workspace10
assign [class="discord"] $workspace10

# CopyQ clipboard manager
for_window [class="copyq"] floating enable

# My own task runners
for_window [title="New Task"] floating enable

# Floating terminal windows.
for_window [class="Termite" window_role="floating"] \
    floating enable, \
    resize set 60 ppt 50 ppt, \
    move position center

for_window [class="(?i)floating"] \
    floating enable, \
    resize set 60 ppt 50 ppt, \
    move position center

# Youtube PiP
for_window [title="(?i)youtube pip"] floating enable

# }}}

# {{{ Window management

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation (note: this would be called vertical split in Vim)
bindsym $mod+v split h

# split in vertical orientation (note: this would be called horizontal split in Vim)
bindsym $mod+s split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+w       layout stacking
bindsym $mod+shift+w layout tabbed
bindsym $mod+q       layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+shift+a focus child

# zen mode
bindsym $mod+z exec i3zen

# }}}

# {{{ Resize mode
# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  bindsym h resize shrink width 10 px or 10 ppt
  bindsym j resize grow height 10 px or 10 ppt
  bindsym k resize shrink height 10 px or 10 ppt
  bindsym l resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
# }}}

# {{{ Media mode and bindings

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound
bindsym Control+XF86AudioMute exec pavucontrol

# Media player controls
bindsym XF86AudioPlay  exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext  exec --no-startup-id playerctl next
bindsym XF86AudioPrev  exec --no-startup-id playerctl previous

mode "media" {
  # Media player controls (se also "
  bindsym j  exec --no-startup-id playerctl play-pause
  bindsym k exec --no-startup-id playerctl play-pause
  bindsym l  exec --no-startup-id playerctl next
  bindsym h  exec --no-startup-id playerctl previous

  # Pulse Audio controls
  bindsym plus exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% #increase sound volume
  bindsym minus exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% #decrease sound volume
  bindsym 0 exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound

  # back to normal: Enter / Escape / Space
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym Space mode "default"
}

bindsym $mod+m mode "media"
# }}}

# {{{ Late startup programs

exec spotify-with-hidpi-support
exec workrave

exec i3-msg 'workspace $workspace10; layout stacked; exec slack; exec yakyak; exec discord'
exec i3-msg 'workspace $workspace3; exec gtk-launch firefox-developer-edition'

exec i3-msg 'workspace $workspace1'
# }}}
